sth. wrong with my eclipse so all codes below are untested.
here is the preparation(REF ADDE:http://618119.com/tag/zxing):

1、get zxing & unzip:
http://code.google.com/p/zxing/

2、get ant & build core.jar:
http://ant.apache.org/bindownload.cgi
configure the path.

D:\Java\zxing-1.6\core>ant

3、build javase.jar
D:\Java\zxing-1.6\javase>ant


【code】
package com.lizongbo.qrcode;

import java.awt.image.BufferedImage;
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.util.Hashtable;

import javax.imageio.ImageIO;

import com.google.zxing.BarcodeFormat;
 import com.google.zxing.EncodeHintType;
 import com.google.zxing.MultiFormatWriter;
 import com.google.zxing.WriterException;
 import com.google.zxing.client.j2se.MatrixToImageWriter;
 import com.google.zxing.common.BitMatrix;
/**
*or
*import com.google.zxing.common.ByteMatrix;
*import com.google.zxing.qrcode.QRCodeWriter;
*not sure. by Yobey
*/

public class QRCodeGen {
 private static final int BLACK = 0xFF000000;
 private static final int WHITE = 0xFFFFFFFF;

/**
 * @param args
 * @throws WriterException
 * @throws IOException
 */
 public static void main(String[] args) throws WriterException, IOException {
 String picFormat = “png”;
StringBuilder sb = new StringBuilder(1024);
 java.io.InputStreamReader fr = new InputStreamReader(
 new FileInputStream(“d:\\quickli.vcf”), “GBK”);
BufferedReader br = new BufferedReader(fr);
 String line = null;
 while ((line = br.readLine()) != null) {
 sb.append(line).append(“\r\n”);
 }
String str = sb.toString();// 二维码内容
System.out.println(str.length() + “|str==” + str);
 str = new String(str.getBytes(“GBK”), “ISO-8859-1″);
 String path = “d:/lzb”;
Hashtable hints = new Hashtable();
 // hints.put(EncodeHintType.CHARACTER_SET, “GBK”);
BitMatrix bitMatrix = new MultiFormatWriter().encode(str,
 BarcodeFormat.QR_CODE, 400, 400, hints);
 /**
 * begin 这段代码等同于就是 MatrixToImageWriter.writeToFile(bitMatrix, picFormat,
 * file); 
 * 直接这样写就不用引用javase.jar
 */
 int width = bitMatrix.getWidth();
 int height = bitMatrix.getHeight();
 BufferedImage image = new BufferedImage(width, height,
 BufferedImage.TYPE_INT_ARGB);
 for (int x = 0; x < width; x++) {
 for (int y = 0; y < height; y++) {
 image.setRGB(x, y, bitMatrix.get(x, y) ? BLACK : WHITE);
 }
 }
 File file = new File(path + “.” + picFormat);
 ImageIO.write(image, picFormat, file);
 /**
 * end 这段代码等同于就是 MatrixToImageWriter.writeToFile(bitMatrix, picFormat,
 * file);
 */
 MatrixToImageWriter.writeToFile(bitMatrix, picFormat, file);
 }
 }


【BTW】ref addr:http://marshal.easymorse.com/archives/2791
"
需要注意的是，在做QR编码的时候要增加字符集声明，这里是UTF-8，否则中文会出现乱码。

主要编码在这个方法里面：


public void generate(OutputStream outputStream) { 
    QRCodeWriter writer = new QRCodeWriter(); 

    try { 
        ByteMatrix matrix = writer.encode(content, BarcodeFormat.QR_CODE, 
                width, height, hints); 
        byte[][] matrixByte = matrix.getArray(); 

        BufferedImage bimg = new BufferedImage(width, height, 
                BufferedImage.TYPE_BYTE_GRAY); 
        byte[] linearbuffer = new byte[width * height]; 

        for (int y = 0,i=0; y < height; y++) { 
            for (int x = 0; x < width; x++) { 
                linearbuffer[i++] = matrixByte[y][x]; 
            } 
        } 
        bimg.getRaster().setDataElements(0, 0, width, height, linearbuffer); 

        ImageIO.write(bimg, "png", outputStream); 
    } catch (Exception e) { 
        throw new RuntimeException(e); 
    } 
}
"